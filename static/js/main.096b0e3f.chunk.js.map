{"version":3,"sources":["Components/MainDisplayContainer.js","Components/ForecastContainer.js","Components/DataContainer.js","Components/Conditions.js","Components/WeatherDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["MainDisplayContainer","temp","icon","feelsLike","feelsColor","Container","DisplayIcon","src","alt","style","color","fontWeight","DisplayTemp","Temp","styled","div","h1","ForecastContainer","timeOne","timeTwo","timeThree","futureTempOne","futureTempTwo","futureTempThree","futureIconOne","futureIconTwo","futureIconThree","ForecastOne","Time","Icon","ForecastTwo","ForecastThree","p","DataContainer","highTemp","lowTemp","windSpeed","humidity","HighLow","High","width","borderColor","borderWidth","Low","WindSpeed","WindTitle","Speed","Humidity","HumidityTitle","HumidityData","Conditions","condition","cityDisplay","CityName","Text","WeatherDisplay","App","useState","city","setCity","state","setStateID","setCityDisplay","setBackground","setTemp","setIcon","setHighTemp","setLowTemp","setFeelsLike","setFeelsColor","setCondition","setWindSpeed","setHumidity","setTimeOne","setTimeTwo","setTimeThree","setFutureTempOne","setFutureTempTwo","setFutureTempThree","setFutureIconOne","setFutureIconTwo","setFutureIconThree","useEffect","axios","get","then","res","data","weather","main","longTemp","newTemp","Math","trunc","longHigh","temp_max","newHigh","longLow","temp_min","newLow","longFeelsLike","feels_like","newLongFeelsLike","description","longWindSpeed","wind","speed","newWindSpeed","resultOne","getFutureTimeFunc","list","dt_txt","resultTwo","resultThree","convertTime","futureIconLinkOne","futureIconLinkTwo","futureIconLinkThree","catch","err","console","log","AdjustCityInput","replace","string","split","inputTime","time","timeValue","hours","Number","backgroundColor","Main","Form","onSubmit","e","preventDefault","adjustedCity","name","Label","Input","type","value","onChange","target","placeholder","Button","props","form","input","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.096b0e3f.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\nexport const MainDisplayContainer = ({temp, icon, feelsLike, feelsColor}) => {\n    return (\n        <Container>\n            <DisplayIcon>\n                <img src={icon} alt='weather-icon'></img>\n                <p>Feels Like <span style={{color: `${feelsColor}`, fontWeight: '900',}}>{feelsLike}</span></p>\n\n            </DisplayIcon>\n            <DisplayTemp>\n                <Temp>{temp}<span>&deg;F</span></Temp>\n\n            </DisplayTemp>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: flex;\n    width: 100%;\n    height: 40%;\n\n`\n\nconst DisplayIcon = styled.div`\n    width: 40%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    font-weight: 400;\n\n`\n\nconst DisplayTemp = styled.div`\n    width: 60%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    & span{\n        font-size: 2rem;\n        vertical-align: top;\n\n        \n\n    }\n`\n\nconst Temp = styled.h1`\n    font-size: 9rem;\n    font-weight: 100;\n\n    @media only screen and (max-width: 1200px){\n        font-size: 7rem;\n    }\n\n    @media only screen and (max-width: 1000px){\n        font-size: 6rem;\n    }\n\n    @media only screen and (max-width: 800px){\n        font-size: 8rem;\n    }\n    @media only screen and (max-width: 600px){\n        font-size: 5rem;\n    }\n\n\n   \n`\n","import React from 'react'\nimport styled from 'styled-components';\n\nexport const ForecastContainer = ({timeOne, timeTwo, timeThree, futureTempOne, futureTempTwo, futureTempThree, futureIconOne, futureIconTwo, futureIconThree}) => {\n    return (\n        <Container>\n            <ForecastOne>\n                <Time>\n                    {timeOne}\n                </Time>\n                <Icon >\n                <img src={futureIconOne} alt='weather-icon'></img>\n                    \n                </Icon>\n                <Temp>\n                    {futureTempOne}\n                </Temp>\n            </ForecastOne>\n            <ForecastTwo>\n                <Time>\n                    {timeTwo}\n                </Time>\n                <Icon>\n                <img src={futureIconTwo} alt='weather-icon'></img>\n                </Icon>\n                <Temp>\n                {futureTempTwo}\n                </Temp>\n            </ForecastTwo>\n            <ForecastThree>\n                <Time>\n                    {timeThree}\n                </Time>\n                <Icon>\n                <img src={futureIconThree} alt='weather-icon'></img>\n                </Icon>\n                <Temp>\n                    {futureTempThree}\n                </Temp>\n            </ForecastThree>\n            \n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: flex;\n    max-height: 20%;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    padding-top: 1.5rem;\n\n    @media only screen and (max-width:600px){\n        height: 100px;\n\n    }\n`\n\nconst ForecastOne = styled.div`\n    display: flex;\n    width: 100%;\n    height: auto;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\nconst ForecastTwo = styled.div`\n    display: flex;\n    width: 100%;\n    height: auto;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\nconst ForecastThree = styled.div`\n    display: flex;\n    width: 100%;\n    height: auto;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\n\nconst Time = styled.p`\n    display: flex;\n    margin: 0;\n    `\n\nconst Icon = styled.div`\n    display: flex;\n    & img{\n        height: 4rem;\n    }\n`\n\nconst Temp = styled.p`\n    display: flex;\n    margin: 0;\n\n`","import React from 'react'\nimport styled from 'styled-components';\n\nexport const DataContainer = ({highTemp, lowTemp, windSpeed, humidity}) => {\n    return (\n        <Container>\n            <HighLow> \n                <High>\n                    High: {highTemp}\n                </High>\n                <hr style={{width: '40px', borderColor: \"black\", borderWidth: 'thin'}}/>\n                <Low>\n                    Low: {lowTemp}\n                </Low>\n             </HighLow>\n            <WindSpeed> \n                <WindTitle>\n                    WindSpeed\n                </WindTitle> \n                <Speed>    \n                    {windSpeed} mph\n                </Speed>\n            </WindSpeed>\n            <Humidity> \n                <HumidityTitle >\n                    Humidity\n                </HumidityTitle>\n                <HumidityData>\n                    {humidity}% \n                 </HumidityData>\n            </Humidity>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    display: flex;\n    width: 90%;\n    margin: auto;\n    height: 20%;\n    align-items: center;\n    justify-content: center;\n    font-weight: 400;\n`\nconst HighLow = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\n\nconst High = styled.div`\n    display: flex;\n`\n\nconst Low = styled.div`\n    display: flex;\n`\n\nconst WindSpeed = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\n\n\nconst WindTitle = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1rem;\n    padding-top: 2.5rem;\n`\n    \nconst Speed = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.5rem;\n    padding-bottom: 2.5rem;\n`\n\nconst Humidity = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    flex-direction: column;\n`\nconst HumidityTitle = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-top: 2.5rem;\n    font-size: 1rem;\n`\n    \nconst HumidityData = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 2rem;\n    padding-bottom: 2.5rem;\n`","import React from 'react'\nimport styled from 'styled-components';\n\n\nexport const Conditions = ({condition, cityDisplay}) => {\n    return (\n        <Container>\n            <CityName>{cityDisplay}</CityName>\n            <Text>{condition}</Text>\n        </Container>\n    )\n}\n\n\nconst Container = styled.div`\n    width: 100%;\n    margin: auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    height: 10%;\n\n    @media only screen and (max-width: 600px){\n        align-items: center;\n    }\n    \n`\n\nconst Text = styled.p`\n    font-size: 1.15rem;\n    display: flex;\n    height: 5%;\n    align-items: center;\n    justify-content: center;\n    @media only screen and (max-width: 600px){\n        font-size: 1rem;\n    }\n`\n\nconst CityName = styled.h1`\n    display: flex;\n    height: 5%;\n    align-items: center;\n    justify-content: center;\n    font-weight: 400;\n    font-size: 3rem;\n\n    @media only screen and (max-width: 600px){\n        font-size: 1.5rem;\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components';\nimport {MainDisplayContainer} from './MainDisplayContainer';\nimport {ForecastContainer} from './ForecastContainer';\nimport {DataContainer} from './DataContainer';\nimport {Conditions} from './Conditions'\n\nexport const WeatherDisplay = ({temp, icon, feelsLike, feelsColor, condition, highTemp, lowTemp, windSpeed, humidity, cityDisplay, timeOne, timeTwo, timeThree, futureTempOne, futureTempTwo, futureTempThree, futureIconOne, futureIconTwo, futureIconThree}) => {\n    return (\n        <Container>\n            <Conditions condition={condition}\n                        cityDisplay={cityDisplay}\n            \n            />\n\n            <MainDisplayContainer temp={temp}\n                                  icon={icon}\n                                  feelsLike={feelsLike}\n                                  feelsColor={feelsColor}                               \n            />\n            <hr style={{width: '300px'}}/>\n            <DataContainer  highTemp={highTemp}\n                            lowTemp={lowTemp}\n                            windSpeed={windSpeed}\n                            humidity={humidity}\n            />\n            <hr style={{width: '300px'}}/>\n            <ForecastContainer timeOne={timeOne}\n                               timeTwo={timeTwo}\n                               timeThree={timeThree}\n                               futureTempOne={futureTempOne}\n                               futureTempTwo={futureTempTwo}\n                               futureTempThree={futureTempThree}\n                               futureIconOne={futureIconOne}\n                               futureIconTwo={futureIconTwo}\n                               futureIconThree={futureIconThree}\n            \n            />\n        </Container>\n    )\n}\n\n\nconst Container = styled.div`\n    width: 70%;\n    margin-left: auto;\n    margin-right: auto;\n    max-height: 70%;\n\n    @media only screen and (max-width: 600px){\n        font-size: 1rem;\n        width: 90vw;\n        max-height: 60%\n    }\n`","import styled from 'styled-components';\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {WeatherDisplay} from './Components/WeatherDisplay'\n\nfunction App() {\n  //Search Arguments\n  const [city, setCity] = useState('')\n  const [state, setStateID] = useState('')\n  const [cityDisplay, setCityDisplay] = useState('New York')\n\n  //BackgroundState\n  const [background, setBackground] = useState('Clouds')\n\n  //Weather Data\n  const [temp, setTemp] = useState('')\n  const [icon, setIcon] = useState('')\n  const [highTemp, setHighTemp] = useState('')\n  const [lowTemp, setLowTemp] = useState('')\n  const [feelsLike, setFeelsLike] = useState('')\n  const [feelsColor, setFeelsColor] = useState('')\n  const [condition, setCondition] = useState('')\n  const [windSpeed, setWindSpeed] = useState('')\n  const [humidity, setHumidity] = useState('')\n\n  //forecast Data\n\n  const [timeOne, setTimeOne] = useState('')\n  const [timeTwo, setTimeTwo] = useState('')\n  const [timeThree, setTimeThree] = useState('')\n  const [futureTempOne, setFutureTempOne] = useState('')\n  const [futureTempTwo, setFutureTempTwo] = useState('')\n  const [futureTempThree, setFutureTempThree] = useState('')\n  const [futureIconOne, setFutureIconOne] = useState('')\n  const [futureIconTwo, setFutureIconTwo] = useState('')\n  const [futureIconThree, setFutureIconThree] = useState('')\n\n\n\n  \n\n  useEffect(() => {\n    axios.get('https://api.openweathermap.org/data/2.5/weather?q=New%20York&appid=7f652c4d970564f9e5da72f381335d86&units=imperial')\n      .then(res => {\n\n        //Get Background\n        setBackground(res.data.weather[0].main)\n        \n        //Get Temp and remove decimal\n        let longTemp = res.data.main.temp;\n        let newTemp = Math.trunc(longTemp);\n        setTemp(newTemp)\n\n        //Get Icon\n        setIcon(`https://openweathermap.org/img/wn/${res.data.weather[0].icon}@2x.png`)\n\n        //Get High and Low Temp and remove decimal\n\n        let longHigh = res.data.main.temp_max;\n        let newHigh = Math.trunc(longHigh);\n        let longLow = res.data.main.temp_min;\n        let newLow = Math.trunc(longLow)\n\n        setHighTemp(newHigh);\n        setLowTemp(newLow);\n\n        //Get Feels Like Temp\n\n        let longFeelsLike = res.data.main.feels_like;\n        let newLongFeelsLike = Math.trunc(longFeelsLike);\n\n        setFeelsLike(newLongFeelsLike)\n\n        //Get Feels Like Temp Color\n\n        if (newLongFeelsLike >= 90){\n          setFeelsColor('fireBrick')\n        } else if (newLongFeelsLike >= 80 &&  newLongFeelsLike < 90){\n          setFeelsColor('DarkGoldenRod')\n        } else if (newLongFeelsLike >= 70 && newLongFeelsLike < 80 ){\n          setFeelsColor('SpringGreen')\n        } else if (newLongFeelsLike >= 60 && newLongFeelsLike < 70){\n          setFeelsColor('forestGreen')\n        } else if (newLongFeelsLike >= 50 && newLongFeelsLike < 60){\n          setFeelsColor('Teal')\n        } else if (newLongFeelsLike >=33 && newLongFeelsLike <50){\n          setFeelsColor('DodgerBlue')\n        } else if (newLongFeelsLike < 33 && newLongFeelsLike >0){\n          setFeelsColor('DeepSkyBlue')\n        } else {\n          setFeelsColor('Maroon')\n        }\n\n        //Get Conditions\n\n        setCondition(res.data.weather[0].description)\n\n        //Get Wind Speed, remove decimal\n\n        let longWindSpeed = res.data.wind.speed;\n        let newWindSpeed = Math.trunc(longWindSpeed);\n        setWindSpeed(newWindSpeed);\n\n        //Get Humidity\n\n        setHumidity(res.data.main.humidity)\n\n        //Get Forecast\n\n        axios.get('https://api.openweathermap.org/data/2.5/forecast?q=New%20York&appid=17f660a7751acde6c5d52f1b5d810eaf&units=imperial')\n          .then(res => {\n          \n            \n            //Get Future times\n\n            let resultOne = getFutureTimeFunc(res.data.list[0].dt_txt)\n            let resultTwo = getFutureTimeFunc(res.data.list[1].dt_txt)\n            let resultThree = getFutureTimeFunc(res.data.list[2].dt_txt)\n            \n            //Convert times to standard time and set to state\n\n            setTimeOne(convertTime(resultOne))\n            setTimeTwo(convertTime(resultTwo))\n            setTimeThree(convertTime(resultThree))\n\n           \n\n            //Get Future Temps\n\n            setFutureTempOne(Math.trunc(res.data.list[0].main.temp))\n            setFutureTempTwo(Math.trunc(res.data.list[1].main.temp))\n            setFutureTempThree(Math.trunc(res.data.list[2].main.temp))\n\n            //Get Future Icons\n\n            let futureIconLinkOne = `https://openweathermap.org/img/wn/${res.data.list[0].weather[0].icon}@2x.png`\n            let futureIconLinkTwo = `https://openweathermap.org/img/wn/${res.data.list[1].weather[0].icon}@2x.png`\n            let futureIconLinkThree = `https://openweathermap.org/img/wn/${res.data.list[2].weather[0].icon}@2x.png`\n\n          \n           \n\n            setFutureIconOne(futureIconLinkOne)\n            setFutureIconTwo(futureIconLinkTwo)\n            setFutureIconThree(futureIconLinkThree)\n            \n          })\n          .catch(err => {\n            console.log(err)\n          })\n        \n\n\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }, [])\n\n  const handleSubmit = e =>{\n    e.preventDefault();\n\n\n    const adjustedCity = AdjustCityInput(city)\n    // const stateCountryId = getStateId(state);\n\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${adjustedCity}&${state}&appid=7f652c4d970564f9e5da72f381335d86&units=imperial`)\n      .then(res => {\n\n        //Get Title Display\n\n        setCityDisplay(res.data.name)\n\n        //reset input State\n        setCity('')\n        setStateID('')\n\n    \n        //Get Background\n        setBackground(res.data.weather[0].main)\n        \n        //Get Temp and remove decimal\n        let longTemp = res.data.main.temp;\n        let newTemp = Math.trunc(longTemp);\n        setTemp(newTemp)\n        \n\n        //Get Icon\n        setIcon(`https://openweathermap.org/img/wn/${res.data.weather[0].icon}@2x.png`)\n\n        //Get High and Low Temp and remove decimal\n\n        let longHigh = res.data.main.temp_max;\n        let newHigh = Math.trunc(longHigh);\n        let longLow = res.data.main.temp_min;\n        let newLow = Math.trunc(longLow)\n\n        setHighTemp(newHigh);\n        setLowTemp(newLow);\n\n        //Get Feels Like Temp\n\n        let longFeelsLike = res.data.main.feels_like;\n        let newLongFeelsLike = Math.trunc(longFeelsLike);\n\n        setFeelsLike(newLongFeelsLike)\n\n        //Get Feels Like Temp Color\n\n        if (newLongFeelsLike >= 90){\n          setFeelsColor('fireBrick')\n        } else if (newLongFeelsLike >= 80 &&  newLongFeelsLike < 90){\n          setFeelsColor('DarkGoldenRod')\n        } else if (newLongFeelsLike >= 70 && newLongFeelsLike < 80 ){\n          setFeelsColor('SpringGreen')\n        } else if (newLongFeelsLike >= 60 && newLongFeelsLike < 70){\n          setFeelsColor('forestGreen')\n        } else if (newLongFeelsLike >= 50 && newLongFeelsLike < 60){\n          setFeelsColor('Teal')\n        } else if (newLongFeelsLike >=33 && newLongFeelsLike <50){\n          setFeelsColor('DodgerBlue')\n        } else if (newLongFeelsLike < 33 && newLongFeelsLike >0){\n          setFeelsColor('DeepSkyBlue')\n        } else {\n          setFeelsColor('Maroon')\n        }\n\n        //Get Conditions\n\n        setCondition(res.data.weather[0].description)\n\n        //Get Wind Speed, remove decimal\n\n        let longWindSpeed = res.data.wind.speed;\n        let newWindSpeed = Math.trunc(longWindSpeed);\n        setWindSpeed(newWindSpeed);\n\n        //Get Humidity\n\n        setHumidity(res.data.main.humidity)\n\n        axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${adjustedCity}&${state}&appid=17f660a7751acde6c5d52f1b5d810eaf&units=imperial`)\n          .then(res => {\n            \n            \n            //Get Future times\n\n            let resultOne = getFutureTimeFunc(res.data.list[0].dt_txt)\n            let resultTwo = getFutureTimeFunc(res.data.list[1].dt_txt)\n            let resultThree = getFutureTimeFunc(res.data.list[2].dt_txt)\n            \n            //Convert times to standard time and set to state\n\n            setTimeOne(convertTime(resultOne))\n            setTimeTwo(convertTime(resultTwo))\n            setTimeThree(convertTime(resultThree))\n\n           \n\n            //Get Future Temps\n\n            setFutureTempOne(Math.trunc(res.data.list[0].main.temp))\n            setFutureTempTwo(Math.trunc(res.data.list[1].main.temp))\n            setFutureTempThree(Math.trunc(res.data.list[2].main.temp))\n\n            //Get Future Icons\n\n            let futureIconLinkOne = `https://openweathermap.org/img/wn/${res.data.list[0].weather[0].icon}@2x.png`\n            let futureIconLinkTwo = `https://openweathermap.org/img/wn/${res.data.list[1].weather[0].icon}@2x.png`\n            let futureIconLinkThree = `https://openweathermap.org/img/wn/${res.data.list[2].weather[0].icon}@2x.png`\n\n          \n            \n\n            setFutureIconOne(futureIconLinkOne)\n            setFutureIconTwo(futureIconLinkTwo)\n            setFutureIconThree(futureIconLinkThree)\n\n\n            \n          })\n  \n\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n    //Adjusts City input to account for blank spaces\n\n    const AdjustCityInput = (city) => {\n        let imputedCity = city;\n        let adjustedCity;\n\n        adjustedCity = imputedCity.replace(' ', '%20');\n\n        return adjustedCity;\n    }\n\n    const getFutureTimeFunc = (string) => {\n        let stringArr = string.split(' ')\n        return stringArr[1]\n    }\n\n\n\n    // Sets the background color relative to the current weather conditions\n   const getBackground=() => {\n    //  console.log(background + 1)\n      if (background === 'Clouds'){\n        return 'blue'\n      } else {\n        return 'blue'\n      }\n   }\n\n   //Converts to Standard Time\n   const convertTime = (inputTime) => {\n      let time = inputTime;\n\n      time = time.split(':');\n\n      // fetch\n      let hours = Number(time[0]);\n\n      // calculate\n      let timeValue;\n\n      if (hours > 0 && hours <= 12) {\n        timeValue= \"\" + hours;\n      } else if (hours > 12) {\n        timeValue= \"\" + (hours - 12);\n      } else if (hours === 0) {\n        timeValue= \"12\";\n      }\n      \n      return timeValue += (hours >= 12) ? \" P.M.\" : \" A.M.\";\n    }\n\n  \n\n  return (\n    <Container backgroundColor={getBackground()}>\n        <Main>\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              Enter City:\n              <Input type='text' value={city} onChange={e => setCity(e.target.value)} placeholder='City (New York)'></Input>\n            </Label>\n            <Label>\n              Enter State or Country:\n              <Input type='text' value={state} onChange={e => setStateID(e.target.value)} placeholder='State (\"NY\")'></Input>\n            </Label>\n            <Button type='submit' value='Find Weather' />\n          </Form>\n          <WeatherDisplay temp={temp}\n                          icon={icon}\n                          feelsLike={feelsLike}\n                          feelsColor={feelsColor}\n                          condition={condition}\n                          highTemp={highTemp}\n                          lowTemp={lowTemp}\n                          windSpeed={windSpeed}\n                          humidity={humidity}\n                          cityDisplay={cityDisplay}\n                          timeOne={timeOne}\n                          timeTwo={timeTwo}\n                          timeThree={timeThree}\n                          futureTempOne={futureTempOne}\n                          futureTempTwo={futureTempTwo}\n                          futureTempThree={futureTempThree}\n                          futureIconOne={futureIconOne}\n                          futureIconTwo={futureIconTwo}\n                          futureIconThree={futureIconThree}\n          />\n        </Main>\n       \n    </Container>\n  );\n}\n\nexport default App;\n\n\nconst Container = styled.div`\n \n  background: linear-gradient(45deg, ${props => props.backgroundColor}, white);\n  color: black;\n  height: 100vh;\n`\nconst Main = styled.div`\n    width: 40%;\n    margin: auto;\n    height: 100%;\n    display: flex;\n    background-color: rgba(255, 255, 255, 0.4);\n    flex-direction: column;\n    /* backdrop-filter: blur(35px); */\n\n    @media only screen and (max-width: 1100px){\n        width: 70vw;\n    }\n    \n\n    @media only screen and (max-width: 700px){\n        width: 100vw;\n        height: 100% !important;\n    }\n`\n\nconst Form = styled.form`\n  display: flex;\n  width: 70%;\n  height: 30%;\n  margin-left: auto;\n  margin-right: auto ;\n  margin-bottom: 0;\n  margin-top: -3rem;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  @media only screen and (max-width:600px){\n    height: 40%;\n  }\n\n`\n\nconst Button = styled.input`\n  display: flex;\n  align-self: center;\n  justify-content: center;\n  margin-top: .5rem;\n  border: none;\n  width: 10rem;\n  height: 2rem;\n  background-color: rgba(240,249,247, .5);\n  cursor: pointer;\n\n  &:hover{\n    background-color: rgba(240,249,247, 1);\n    transition: background-color 1s ease-in-out;\n  }\n`\n\nconst Label = styled.label`\n  width: 100%;\n`\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  background-color: rgba(240,249,247, .5);\n  \n\n  &:focus{\n    background-color: rgba(245, 245, 245, 1);\n    transition: background-color 1s ease-in-out;\n  }\n`\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}